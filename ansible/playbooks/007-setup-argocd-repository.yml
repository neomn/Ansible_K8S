- hosts: kube_control_plane
  gather_facts: false
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  become: true
  tasks: 

    - block:
      - name: setup-argocd-repository | change argocd resource tracking strategy
        k8s:
          state: present
          definition:
            apiVersion: v1
            kind: ConfigMap
            metadata:
              name: argocd-cm
              namespace: argocd
            labels:
              app.kubernetes.io/name: argocd-cm
              app.kubernetes.io/part-of: argocd
            data:
              application.resourceTrackingMethod: annotation+lable
      
      # - name: setup-argocd-repository | add namespaces to argocd and restart argocd-server and argocd-app-controller
      #   k8s:
      #     state: present
      #     definition:
      #       apiVersion: v1
      #       data:
      #         redis.server: argocd-redis-ha-haproxy:6379
      #       kind: ConfigMap
      #       metadata:
      #         labels:
      #           app.kubernetes.io/name: argocd-cmd-params-cm
      #           app.kubernetes.io/part-of: argocd
      #         name: argocd-cmd-params-cm
      #         namespace: argocd
      #

      - name: setup-argocd-repository | specify namespaces which argocd can manage
        kubernetes.core.k8s:
          api_version: v1
          kind: ConfigMap
          name: argocd-cmd-params-cm
          namespace: argocd
          merge_type: merge
          definition:
            data:
              application.namespaces: "kube-system, dev, prod"

      - name: setup-argocd-repository | restart argocd-server and argocd-app-controller
        shell: |
          kubectl rollout restart -n argocd deployment argocd-server &&
          kubectl rollout restart -n argocd statefulset argocd-application-controller
        

      - name: setup-argocd-repository | Adapt Kubernetes RBAC
        k8s:
          state: present
          definition:


      - name: setup-argocd-repository | Allowing additional namespaces in an AppProject
        k8s:
          state: present
          definition:

      - name: setup-argocd-repository | add sweetiot git repo
        vars: 
          ssh_key: "{{ lookup('file', '/files/secrets/sweetiot_gitops_repo_ssh_key') }}"
          state: present
        k8s:
          state: present
          definition:
            apiVersion: v1
            kind: Secret
            metadata:
              name: sweetiot-gitops-repo-ssh-key
              namespace: argocd
              labels:
                argocd.argoproj.io/secret-type: repository
            stringData:
              type: git
              url: https://gitlab.com/sweetiot/deployment/sweetiot_gitops.git
              username: "{{ lookup('file', 'GITLAB_USERNAME')}}"
              password: "{{ lookup('env', 'GITLAB_READ_REPO_ACCESS_TOKEN') }}"
        
      - name: setup-argocd-repository | create bootstrap application
        k8s:
          state: present
          definition: 
            apiVersion: argoproj.io/v1alpha1
            kind: Application
            metadata:
              name: cluster-bootstrap
              namespace: dev
            spec:
              project: default
              source:
                repoURL: https://gitlab.com/sweetiot/deployment/sweetiot_gitops.git 
                targetRevision: bootstrap
                path: templates
              destination:
                server: https://kubernetes.default.svc
                namespace: sweetiot
              syncPolicy:
                automated:
                  prune: true
                  selfHeal: true     
                syncOptions:
                  - CreateNamespace=true
      when: inventory_hostname == groups['kube_control_plane'][0]
