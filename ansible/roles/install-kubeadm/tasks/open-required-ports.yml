---
# open admin node ports
- name: open required ports | control plane 
  iptables:
    table: filter
    chain: INPUT
    protocol: tcp
    destination_port: "{{ APISERVER_PORT }}"
    jump: ACCEPT
  when: inventory_hostname in groups['kube_control_plane']

- name: open required ports | etcd
  iptables:
    table: filter
    chain: INPUT
    protocol: tcp
    destination_port: 2379:2380
    jump: ACCEPT
  when: inventory_hostname in groups['kube_control_plane']

- name: open required ports | Kubelet API
  iptables:
    table: filter
    chain: INPUT
    protocol: tcp
    destination_port: 10250
    jump: ACCEPT
  when: inventory_hostname in groups['kube_control_plane']

- name: open required ports | kube-scheduler
  iptables:
    table: filter
    chain: INPUT
    protocol: tcp
    destination_port: 10259
    jump: ACCEPT
  when: inventory_hostname in groups['kube_control_plane']

- name: open required ports | kube-controller-manager
  iptables:
    table: filter
    chain: INPUT
    protocol: tcp
    destination_port: 10257
    jump: ACCEPT
  when: inventory_hostname in groups['kube_control_plane']


# open worker node ports
- name: open required ports | worker node
  iptables:
    table: filter
    chain: INPUT
    protocol: tcp
    destination_port: 10250
    jump: ACCEPT
  when: inventory_hostname in groups['kube_node']

- name: open required ports | kube-proxy
  iptables:
    table: filter
    chain: INPUT
    protocol: tcp
    destination_port: 10256
    jump: ACCEPT
  when: inventory_hostname in groups['kube_node']

- name: open required ports | NodePort Services port range
  iptables:
    table: filter
    chain: INPUT
    protocol: tcp
    destination_port: 30000:32767
    jump: ACCEPT
  when: inventory_hostname in groups['kube_node']

- name: open required ports | enable ipv4 packet forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: true
    reload: true
